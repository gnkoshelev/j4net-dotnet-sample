// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/hashGrpc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HashGrpcServer {

  /// <summary>Holder for reflection information generated from proto/hashGrpc.proto</summary>
  public static partial class HashGrpcReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/hashGrpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HashGrpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwcm90by9oYXNoR3JwYy5wcm90bxIOaGFzaEdycGNTZXJ2ZXIiLwoLSGFz",
            "aFJlcXVlc3QSEQoJYWxnb3JpdGhtGAEgASgJEg0KBWJ5dGVzGAIgASgMIhwK",
            "DEhhc2hSZXNwb25zZRIMCgRoYXNoGAEgASgJMlUKC0hhc2hTZXJ2aWNlEkYK",
            "B0NvbXB1dGUSGy5oYXNoR3JwY1NlcnZlci5IYXNoUmVxdWVzdBocLmhhc2hH",
            "cnBjU2VydmVyLkhhc2hSZXNwb25zZSIAQkQKK3J1Lmdua29zaGVsZXYuajRu",
            "ZXQuc2FtcGxlLmhhc2guZ3JwYy5zZXJ2ZXJCE0hhc2hHcnBjU2VydmVyUHJv",
            "dG9QAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HashGrpcServer.HashRequest), global::HashGrpcServer.HashRequest.Parser, new[]{ "Algorithm", "Bytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HashGrpcServer.HashResponse), global::HashGrpcServer.HashResponse.Parser, new[]{ "Hash" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HashRequest : pb::IMessage<HashRequest> {
    private static readonly pb::MessageParser<HashRequest> _parser = new pb::MessageParser<HashRequest>(() => new HashRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HashRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HashGrpcServer.HashGrpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest(HashRequest other) : this() {
      algorithm_ = other.algorithm_;
      bytes_ = other.bytes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashRequest Clone() {
      return new HashRequest(this);
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 1;
    private string algorithm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HashRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HashRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Algorithm != other.Algorithm) return false;
      if (Bytes != other.Bytes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Algorithm.Length != 0) hash ^= Algorithm.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Algorithm.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Algorithm);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Algorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Algorithm);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HashRequest other) {
      if (other == null) {
        return;
      }
      if (other.Algorithm.Length != 0) {
        Algorithm = other.Algorithm;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Algorithm = input.ReadString();
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HashResponse : pb::IMessage<HashResponse> {
    private static readonly pb::MessageParser<HashResponse> _parser = new pb::MessageParser<HashResponse>(() => new HashResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HashResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HashGrpcServer.HashGrpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse(HashResponse other) : this() {
      hash_ = other.hash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashResponse Clone() {
      return new HashResponse(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HashResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HashResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HashResponse other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
